# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Quantity.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import sqlite3
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox,QTableWidget,QTableWidget
from PyQt5.QtSql import QSqlDatabase, QSqlTableModel
from PyQt5.QtWidgets import *
from PyQt5.QtGui  import *
from PyQt5.QtCore import *

# Global string used to determine the number of parts in a given delivery
delivQty = ""

confEntry = False

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 570)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.oneBtn = QtWidgets.QPushButton(self.centralwidget)
        self.oneBtn.setGeometry(QtCore.QRect(170, 90, 51, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.oneBtn.setFont(font)
        self.oneBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.oneBtn.setObjectName("oneBtn")
        self.confirmQtyBtn = QtWidgets.QPushButton(self.centralwidget)
        self.confirmQtyBtn.setGeometry(QtCore.QRect(180, 460, 201, 51))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.confirmQtyBtn.setFont(font)
        self.confirmQtyBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.confirmQtyBtn.setObjectName("confirmQtyBtn")
        self.WOLabel = QtWidgets.QLabel(self.centralwidget)
        self.WOLabel.setGeometry(QtCore.QRect(40, 20, 521, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.WOLabel.setFont(font)
        self.WOLabel.setStyleSheet("")
        self.WOLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.WOLabel.setObjectName("WOLabel")
        self.twoBtn = QtWidgets.QPushButton(self.centralwidget)
        self.twoBtn.setGeometry(QtCore.QRect(260, 90, 51, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.twoBtn.setFont(font)
        self.twoBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.twoBtn.setObjectName("twoBtn")
        self.threeBtn = QtWidgets.QPushButton(self.centralwidget)
        self.threeBtn.setGeometry(QtCore.QRect(350, 90, 51, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.threeBtn.setFont(font)
        self.threeBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.threeBtn.setObjectName("threeBtn")
        self.eightBtn = QtWidgets.QPushButton(self.centralwidget)
        self.eightBtn.setGeometry(QtCore.QRect(260, 250, 51, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.eightBtn.setFont(font)
        self.eightBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.eightBtn.setObjectName("eightBtn")
        self.fourBtn = QtWidgets.QPushButton(self.centralwidget)
        self.fourBtn.setGeometry(QtCore.QRect(170, 170, 51, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.fourBtn.setFont(font)
        self.fourBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.fourBtn.setObjectName("fourBtn")
        self.fiveBtn = QtWidgets.QPushButton(self.centralwidget)
        self.fiveBtn.setGeometry(QtCore.QRect(260, 170, 51, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.fiveBtn.setFont(font)
        self.fiveBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.fiveBtn.setObjectName("fiveBtn")
        self.nineBtn = QtWidgets.QPushButton(self.centralwidget)
        self.nineBtn.setGeometry(QtCore.QRect(350, 250, 51, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.nineBtn.setFont(font)
        self.nineBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.nineBtn.setObjectName("nineBtn")
        self.sevenBtn = QtWidgets.QPushButton(self.centralwidget)
        self.sevenBtn.setGeometry(QtCore.QRect(170, 250, 51, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.sevenBtn.setFont(font)
        self.sevenBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.sevenBtn.setObjectName("sevenBtn")
        self.sixBtn = QtWidgets.QPushButton(self.centralwidget)
        self.sixBtn.setGeometry(QtCore.QRect(350, 170, 51, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.sixBtn.setFont(font)
        self.sixBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.sixBtn.setObjectName("sixBtn")
        self.zeroBtn = QtWidgets.QPushButton(self.centralwidget)
        self.zeroBtn.setGeometry(QtCore.QRect(350, 330, 51, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.zeroBtn.setFont(font)
        self.zeroBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.zeroBtn.setObjectName("zeroBtn")
        self.clearQtyBtn = QtWidgets.QPushButton(self.centralwidget)
        self.clearQtyBtn.setGeometry(QtCore.QRect(170, 330, 141, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.clearQtyBtn.setFont(font)
        self.clearQtyBtn.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.clearQtyBtn.setObjectName("clearQtyBtn")
        self.amountLabel = QtWidgets.QLabel(self.centralwidget)
        self.amountLabel.setGeometry(QtCore.QRect(30, 400, 521, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.amountLabel.setFont(font)
        self.amountLabel.setStyleSheet("")
        self.amountLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.amountLabel.setObjectName("amountLabel")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 600, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    # Button triggers here

        self.zeroBtn.clicked.connect(lambda: self.clicked("Zero"))
        self.oneBtn.clicked.connect(lambda: self.clicked("One"))
        self.twoBtn.clicked.connect(lambda: self.clicked("Two"))
        self.threeBtn.clicked.connect(lambda: self.clicked("Three"))
        self.fourBtn.clicked.connect(lambda: self.clicked("Four"))
        self.fiveBtn.clicked.connect(lambda: self.clicked("Five"))
        self.sixBtn.clicked.connect(lambda: self.clicked("Six"))
        self.sevenBtn.clicked.connect(lambda: self.clicked("Seven"))
        self.eightBtn.clicked.connect(lambda: self.clicked("Eight"))
        self.nineBtn.clicked.connect(lambda: self.clicked("Nine"))

        self.clearQtyBtn.clicked.connect(lambda: self.clicked("Clear"))

        self.confirmQtyBtn.clicked.connect(lambda: self.clicked("Confirm"))

    # end button triggers

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.oneBtn.setText(_translate("MainWindow", "1"))
        self.confirmQtyBtn.setText(_translate("MainWindow", "Confirm Quantity"))
        self.WOLabel.setText(_translate("MainWindow", "Please enter the quantity of parts below"))
        self.twoBtn.setText(_translate("MainWindow", "2"))
        self.threeBtn.setText(_translate("MainWindow", "3"))
        self.eightBtn.setText(_translate("MainWindow", "8"))
        self.fourBtn.setText(_translate("MainWindow", "4"))
        self.fiveBtn.setText(_translate("MainWindow", "5"))
        self.nineBtn.setText(_translate("MainWindow", "9"))
        self.sevenBtn.setText(_translate("MainWindow", "7"))
        self.sixBtn.setText(_translate("MainWindow", "6"))
        self.zeroBtn.setText(_translate("MainWindow", "0"))
        self.clearQtyBtn.setText(_translate("MainWindow", "Clear"))
        self.amountLabel.setText(_translate("MainWindow", "Quantity:"))


    def clicked(self, text):
        global delivQty

        confEntry = False

        if text == "Zero":
            delivQty = delivQty + "0"
            print(delivQty)
        if text == "One":
            delivQty = delivQty + "1"
            print(delivQty)
        if text == "Two":
            delivQty = delivQty + "2"
            print(delivQty)
        if text == "Three":
            delivQty = delivQty + "3"
            print(delivQty)
        if text == "Four":
            delivQty = delivQty + "4"
            print(delivQty)
        if text == "Five":
            delivQty = delivQty + "5"
            print(delivQty)
        if text == "Six":
            delivQty = delivQty + "6"
            print(delivQty)
        if text == "Seven":
            delivQty = delivQty + "7"
            print(delivQty)
        if text == "Eight":
            delivQty = delivQty + "8"
            print(delivQty)
        if text == "Nine":
            delivQty = delivQty + "9"
            print(delivQty)

        if text == "Clear":
            delivQty = ""
            print(delivQty)

        if text == "Confirm":
            confEntry = True

            print("confirming Qty")
            self.amountLabel.setText("Quantity of " + delivQty + " has been submitted.")
            self.insertQty(delivQty)
        
        if confEntry == False:
            self.amountLabel.setText("Quantity: " + delivQty)

    def insertQty(self,l):
        curRow = self.whichRow()
        
        QtyCon = sqlite3.connect("Z:\BPT.db")

        print("connected for insert Qty\n")

        cursor = QtyCon.cursor()
                    
        insQty = "UPDATE tasks SET QTY ='"+l+"' WHERE row_ID = "+curRow+";"

        cursor.execute(insQty)
        QtyCon.commit()
        QtyCon.close()

    def whichRow(self):
        con = sqlite3.connect("Z:\BPT.db")
        cellCon = con.cursor()

        cellCon.execute('SELECT Current_Row FROM states')
        data = cellCon.fetchone()
        rw = str(data[0])
        print("Current_Row is:" + str(rw))
        return rw

    def startUp():
        global QtyWindow
        app = QtWidgets.QApplication(sys.argv)
        QtyWindow = QtWidgets.QMainWindow()
        ui = Ui_MainWindow()
        ui.setupUi(QtyWindow)
        QtyWindow.show()
        sys.exit(app.exec_())

class SQL_Table(QMainWindow):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("Delivery Request Window")
        self.resize(1200, 200)
        # Set up the model
        self.model = QSqlTableModel(self)
        self.model.setTable("tasks")
        self.model.setEditStrategy(QSqlTableModel.OnFieldChange)
        self.model.setHeaderData(0, Qt.Horizontal, "Work_Order")
        self.model.setHeaderData(1, Qt.Horizontal, "QTY")
        self.model.setHeaderData(2, Qt.Horizontal, "Pickup_Location")
        self.model.setHeaderData(3, Qt.Horizontal, "Delivery_Location")
        self.model.select()
        # Set up the view
        self.view = QTableView()
        self.view.setModel(self.model)
        self.view.resizeColumnsToContents()
        self.setCentralWidget(self.view)

    # Creates the GUI's connection to the SQLite database on the Raspberry Pi
    def createConnection():
        con = QSqlDatabase.addDatabase("QSQLITE")
        # Sets the file path of the SQL Database file
        # **Note**: Change this to the path of your SQL database located on your local network drive
        con.setDatabaseName("Z:\BPT.db")
        if not con.open():
            # Returns the following message if program fails to connect to database
            QMessageBox.critical(
                None,
                "QTableView Example - Error!",
                "Database Error: %s" % con.lastError().databaseText(),
            )
            return False
        return True

if __name__ == "__main__":
    import sys
    Ui_MainWindow.startUp()

if not SQL_Table.createConnection():
    sys.exit(1)
DB_win = SQL_Table()